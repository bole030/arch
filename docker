# install vaultgarden
docker pull vaultwarden/server:latest
docker run -d --name vaultwarden -v /Users/w/docker/:/data/ --restart unless-stopped -p 80:80 vaultwarden/server:latest

# install nextcloud

# change trusted domains
docker exec --user www-data -it nextcloud php occ config:system:get trusted_domains
docker exec --user www-data -it nextcloud php occ config:system:set trusted_domains 10 --value="192.168.178.33"

# mount storage
I've successfully mount /home/<user-name> folder of my host to the /mnt folder of the existing (not running) container. You can do it in the following way:

Open configuration file corresponding to the stopped container, which can be found at /var/lib/docker/containers/99d...1fb/config.v2.json (may be config.json for older versions of docker).

Find MountPoints section, which was empty in my case: "MountPoints":{}. Next replace the contents with something like this (you can copy proper contents from another container with proper settings):

"MountPoints":{"/mnt":{"Source":"/home/<user-name>","Destination":"/mnt","RW":true,"Name":"","Driver":"","Type":"bind","Propagation":"rprivate","Spec":{"Type":"bind","Source":"/home/<user-name>","Target":"/mnt"},"SkipMountpointCreation":false}}
or the same (formatted):

  "MountPoints": {
    "/mnt": {
      "Source": "/home/<user-name>",
      "Destination": "/mnt",
      "RW": true,
      "Name": "",
      "Driver": "",
      "Type": "bind",
      "Propagation": "rprivate",
      "Spec": {
        "Type": "bind",
        "Source": "/home/<user-name>",
        "Target": "/mnt"
      },
      "SkipMountpointCreation": false
    }
  }
Restart the docker service: service docker restart

docker pull nextcloud
docker run -d --name nextcloud -v /Users/w/nextcloud/:/var/www/html -v /Users/w/nextcloud/config:/var/www/html/config -v /Users/w/nextcloud/data:/var/www/html/data --restart unless-stopped -p 8888:80 nextcloud

-v /Users/w/nextcloud/apps:/var/www/html/custom_apps \
-v theme:/var/www/html/themes/<YOUR_CUSTOM_THEME> \

Here is an example of the code saved as smbclient.sh:

#!bin/sh
apt update
apt install smbclient libsmbclient-dev -y
pecl install smbclient
docker-php-ext-enable smbclient
I have this file listed in the same directory as my compose file. In that file I have:

volumes:
  - ./smbclient.sh:/docker-entrypoint-hooks.d/post-upgrade/smbclient.sh
Now every time the container updates, either by me or by watchtower smbclient is installed automatically.
